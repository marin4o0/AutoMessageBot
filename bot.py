import os
import discord
from discord.ext import commands
from discord import app_commands
import asyncio
import json

# === Environment Variables –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ ===
TOKEN = os.getenv("DISCORD_TOKEN")
CHANNEL_ID_ENV = os.getenv("DISCORD_CHANNEL_ID")

if not TOKEN:
    raise ValueError("‚ùå DISCORD_TOKEN –Ω–µ –µ –∑–∞–¥–∞–¥–µ–Ω–æ –≤ environment variables")
if not CHANNEL_ID_ENV:
    raise ValueError("‚ùå DISCORD_CHANNEL_ID –Ω–µ –µ –∑–∞–¥–∞–¥–µ–Ω–æ –≤ environment variables")

try:
    CHANNEL_ID = int(CHANNEL_ID_ENV)
except ValueError:
    raise ValueError(f"‚ùå DISCORD_CHANNEL_ID —Ç—Ä—è–±–≤–∞ –¥–∞ –µ —á–∏—Å–ª–æ, –∞ –µ '{CHANNEL_ID_ENV}'")

print(f"‚úÖ Env variables –∑–∞—Ä–µ–¥–µ–Ω–∏ —É—Å–ø–µ—à–Ω–æ. –ö–∞–Ω–∞–ª ID: {CHANNEL_ID}")

# === Intents ===
intents = discord.Intents.default()
intents.presences = True
intents.members = True
intents.message_content = True  # –Ω—É–∂–Ω–æ –∑–∞ –∫–æ–º–∞–Ω–¥–∏—Ç–µ –∏ —á–µ—Ç–µ–Ω–µ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏—è

bot = commands.Bot(command_prefix="!", intents=intents)
tree = bot.tree

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏ ===
SAVE_FILE = "active_messages.json"
ALLOWED_ROLES = ["Admin", "Moderator"]
active_messages = {}  # ID ‚Üí {–¥–∞–Ω–Ω–∏, task, status, message_ref}

# === –ü–æ–º–æ—â–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏ ===
def has_permission(user: discord.Member) -> bool:
    if user.guild_permissions.administrator:
        return True
    for role in user.roles:
        if role.name in ALLOWED_ROLES:
            return True
    return False

def save_messages():
    data = {}
    for msg_id, msg in active_messages.items():
        data[msg_id] = {
            "message": msg["message"],
            "interval": msg["interval"],
            "repeat": msg["repeat"],
            "id": msg["id"],
            "creator": msg["creator"],
            "status": msg.get("status", "active"),
            "embed_message_id": msg.get("embed_message_id")
        }
    with open(SAVE_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=4)

async def restart_message_task(msg_id, msg_data):
    if msg_data.get("status") != "active":
        return

    channel = bot.get_channel(CHANNEL_ID)
    if not channel:
        print(f"‚ö†Ô∏è –ö–∞–Ω–∞–ª—ä—Ç —Å ID {CHANNEL_ID} –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω.")
        return

    async def task_func():
        count = 0
        while True:
            if msg_data["repeat"] != 0 and count >= msg_data["repeat"]:
                break
            await channel.send(msg_data["message"])
            count += 1
            await asyncio.sleep(msg_data["interval"] * 60)
        active_messages[msg_id]["status"] = "stopped"
        await update_embed_status(msg_id)
        save_messages()

    task = asyncio.create_task(task_func())
    active_messages[msg_id]["task"] = task

async def load_messages():
    if not os.path.exists(SAVE_FILE):
        return
    with open(SAVE_FILE, "r", encoding="utf-8") as f:
        data = json.load(f)
    for msg_id, msg in data.items():
        active_messages[msg_id] = msg
        active_messages[msg_id]["task"] = None
        await restart_message_task(msg_id, msg)

async def update_embed_status(msg_id):
    msg_data = active_messages.get(msg_id)
    if not msg_data or not msg_data.get("embed_message_id"):
        return

    channel = bot.get_channel(CHANNEL_ID)
    try:
        embed_msg = await channel.fetch_message(msg_data["embed_message_id"])
    except discord.NotFound:
        return

    embed = discord.Embed(
        title=f"üÜî {msg_data['id']} ({msg_data['status']})",
        description=f"üí¨ {msg_data['message']}\n‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª: {msg_data['interval']} –º–∏–Ω\nüîÅ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏—è: {'‚àû' if msg_data['repeat']==0 else msg_data['repeat']}\nüë§ –û—Ç: {msg_data['creator']}",
        color=discord.Color.green() if msg_data['status']=="active" else discord.Color.red()
    )
    await embed_msg.edit(embed=embed, view=MessageButtons(msg_id))

# === View —Å –±—É—Ç–æ–Ω–∏ ===
class MessageButtons(discord.ui.View):
    def __init__(self, msg_id):
        super().__init__(timeout=None)
        self.msg_id = msg_id

    @discord.ui.button(emoji="‚ñ∂Ô∏è", style=discord.ButtonStyle.green)
    async def start_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if not has_permission(interaction.user):
            await interaction.response.send_message("üö´ –ù—è–º–∞—à –ø—Ä–∞–≤–∞ –∑–∞ —Ç–∞–∑–∏ –æ–ø–µ—Ä–∞—Ü–∏—è.", ephemeral=True)
            return

        msg = active_messages.get(self.msg_id)
        if not msg:
            await interaction.response.send_message("‚ùå –ù–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–æ.", ephemeral=True)
            return
        if msg["status"] == "active":
            await interaction.response.send_message("‚ö†Ô∏è –í–µ—á–µ –µ –∞–∫—Ç–∏–≤–Ω–æ.", ephemeral=True)
            return
        msg["status"] = "active"
        await restart_message_task(self.msg_id, msg)
        await update_embed_status(self.msg_id)
        save_messages()
        await interaction.response.send_message(f"‚ñ∂Ô∏è '{self.msg_id}' —Å—Ç–∞—Ä—Ç–∏—Ä–∞ –æ—Ç–Ω–æ–≤–æ.", ephemeral=True)

    @discord.ui.button(emoji="‚èπÔ∏è", style=discord.ButtonStyle.blurple)
    async def stop_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if not has_permission(interaction.user):
            await interaction.response.send_message("üö´ –ù—è–º–∞—à –ø—Ä–∞–≤–∞ –∑–∞ —Ç–∞–∑–∏ –æ–ø–µ—Ä–∞—Ü–∏—è.", ephemeral=True)
            return

        msg = active_messages.get(self.msg_id)
        if not msg:
            await interaction.response.send_message("‚ùå –ù–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–æ.", ephemeral=True)
            return
        task = msg.get("task")
        if task:
            task.cancel()
        msg["status"] = "stopped"
        msg["task"] = None
        await update_embed_status(self.msg_id)
        save_messages()
        await interaction.response.send_message(f"‚èπÔ∏è '{self.msg_id}' –µ —Å–ø—Ä—è–Ω–æ.", ephemeral=True)

    @discord.ui.button(emoji="‚ùå", style=discord.ButtonStyle.red)
    async def delete_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        if not has_permission(interaction.user):
            await interaction.response.send_message("üö´ –ù—è–º–∞—à –ø—Ä–∞–≤–∞ –∑–∞ —Ç–∞–∑–∏ –æ–ø–µ—Ä–∞—Ü–∏—è.", ephemeral=True)
            return

        msg = active_messages.pop(self.msg_id, None)
        if msg:
            task = msg.get("task")
            if task:
                task.cancel()
            save_messages()
            try:
                channel = bot.get_channel(CHANNEL_ID)
                embed_msg = await channel.fetch_message(msg["embed_message_id"])
                await embed_msg.delete()
            except Exception:
                pass
            await interaction.response.send_message(f"‚ùå '{self.msg_id}' –µ –∏–∑—Ç—Ä–∏—Ç–æ.", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå –ù–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–æ.", ephemeral=True)

# === –ö–æ–º–∞–Ω–¥–∏ ===
@bot.event
async def on_ready():
    print(f"‚úÖ –í–ª—è–∑—ä–ª —Å—ä–º –∫–∞—Ç–æ {bot.user}")
    await tree.sync()
    await load_messages()
    print("üîÅ –í—ä–∑—Å—Ç–∞–Ω–æ–≤–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–∏ —Å—ä–æ–±—â–µ–Ω–∏—è.")

@tree.command(name="create", description="–°—ä–∑–¥–∞–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ.")
@app_commands.describe(
    message="–¢–µ–∫—Å—Ç –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ",
    interval="–ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º–∏–Ω—É—Ç–∏ (>0)",
    repeat="–ë—Ä–æ–π –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è (0 = –±–µ–∑–∫—Ä–∞–π–Ω–æ)",
    id="–£–Ω–∏–∫–∞–ª–µ–Ω –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä"
)
async def create(interaction: discord.Interaction, message: str, interval: int, repeat: int, id: str):
    if not has_permission(interaction.user):
        await interaction.response.send_message("üö´ –ù—è–º–∞—à –ø—Ä–∞–≤–∞ –¥–∞ —Å—ä–∑–¥–∞–≤–∞—à —Å—ä–æ–±—â–µ–Ω–∏—è.", ephemeral=True)
        return

    if id in active_messages:
        await interaction.response.send_message(f"‚ö†Ô∏è '{id}' –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.", ephemeral=True)
        return
    if interval <= 0:
        await interaction.response.send_message("‚ùå –ò–Ω—Ç–µ—Ä–≤–∞–ª—ä—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ –µ > 0.", ephemeral=True)
        return

    channel = bot.get_channel(CHANNEL_ID)
    async def task_func():
        count = 0
        while True:
            if repeat != 0 and count >= repeat:
                break
            await channel.send(message)
            count += 1
            await asyncio.sleep(interval * 60)
        active_messages[id]["status"] = "stopped"
        await update_embed_status(id)
        save_messages()

    task = asyncio.create_task(task_func())
    msg_data = {
        "task": task,
        "message": message,
        "interval": interval,
        "repeat": repeat,
        "id": id,
        "creator": interaction.user.name,
        "status": "active"
    }
    active_messages[id] = msg_data
    save_messages()

    embed = discord.Embed(
        title=f"üÜî {id} (active)",
        description=f"üí¨ {message}\n‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª: {interval} –º–∏–Ω\nüîÅ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏—è: {'‚àû' if repeat==0 else repeat}\nüë§ –û—Ç: {interaction.user.name}",
        color=discord.Color.green()
    )
    sent = await channel.send(embed=embed, view=MessageButtons(id))
    msg_data["embed_message_id"] = sent.id
    save_messages()
    await interaction.response.send_message(f"‚úÖ –°—ä–∑–¥–∞–¥–µ–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ '{id}'.", ephemeral=True)

@tree.command(name="list", description="–ü–æ–∫–∞–∂–∏ –≤—Å–∏—á–∫–∏ —Å—ä–æ–±—â–µ–Ω–∏—è —Å –±—É—Ç–æ–Ω–∏.")
async def list_messages(interaction: discord.Interaction):
    if not has_permission(interaction.user):
        await interaction.response.send_message("üö´ –ù—è–º–∞—à –ø—Ä–∞–≤–∞ –∑–∞ —Ç–∞–∑–∏ –∫–æ–º–∞–Ω–¥–∞.", ephemeral=True)
        return

    if not active_messages:
        await interaction.response.send_message("‚ÑπÔ∏è –ù—è–º–∞ —Å—ä–æ–±—â–µ–Ω–∏—è.", ephemeral=True)
        return

    for msg in active_messages.values():
        color = discord.Color.green() if msg["status"] == "active" else discord.Color.red()
        embed = discord.Embed(
            title=f"üÜî {msg['id']} ({msg['status']})",
            description=f"üí¨ {msg['message']}\n‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª: {msg['interval']} –º–∏–Ω\nüîÅ –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏—è: {'‚àû' if msg['repeat']==0 else msg['repeat']}\nüë§ –û—Ç: {msg['creator']}",
            color=color
        )
        sent = await interaction.channel.send(embed=embed, view=MessageButtons(msg["id"]))
        msg["embed_message_id"] = sent.id
    save_messages()
    await interaction.response.send_message("üìã –í—Å–∏—á–∫–∏ —Å—ä–æ–±—â–µ–Ω–∏—è —Å–∞ –ø–æ–∫–∞–∑–∞–Ω–∏ –ø–æ-–¥–æ–ª—É.", ephemeral=True)

@tree.command(name="help_create", description="–ü–æ–∫–∞–∑–≤–∞ –ø—Ä–∏–º–µ—Ä –∑–∞ /create")
async def help_create(interaction: discord.Interaction):
    if not has_permission(interaction.user):
        await interaction.response.send_message("üö´ –ù—è–º–∞—à –ø—Ä–∞–≤–∞ –∑–∞ —Ç–∞–∑–∏ –∫–æ–º–∞–Ω–¥–∞.", ephemeral=True)
        return

    example = (
        "üß† **–ü—Ä–∏–º–µ—Ä:**\n"
        "```\n"
        "/create message:\"–†–∞–π–¥ —Å–ª–µ–¥ 1 —á–∞—Å!\" interval:120 repeat:0 id:\"raid\"\n"
        "```\n"
        "- `message`: –¢–µ–∫—Å—Ç –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ\n"
        "- `interval`: –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º–∏–Ω—É—Ç–∏\n"
        "- `repeat`: –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏—è (0 = –±–µ–∑–∫—Ä–∞–π–Ω–æ)\n"
        "- `id`: –ò–º–µ –Ω–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ—Ç–æ"
    )
    await interaction.response.send_message(example, ephemeral=True)

# === –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –±–æ—Ç–∞ ===
bot.run(TOKEN)
